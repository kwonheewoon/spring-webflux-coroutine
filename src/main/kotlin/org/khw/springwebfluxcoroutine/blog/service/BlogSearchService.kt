package org.khw.springwebfluxcoroutine.blog.serviceimport kotlinx.coroutines.reactive.awaitSingleimport lombok.RequiredArgsConstructorimport org.khw.springwebfluxcoroutine.blog.domain.dto.BlogSearchResponseDtoimport org.khw.springwebfluxcoroutine.blog.domain.dto.KakaoBlogSearchResponseimport org.springframework.http.MediaTypeimport org.springframework.stereotype.Serviceimport org.springframework.web.reactive.function.client.WebClientimport org.springframework.web.reactive.function.client.bodyToMonoimport reactor.core.publisher.Monoimport reactor.kotlin.core.publisher.toMono@Service@RequiredArgsConstructorclass BlogSearchService() {    private val webClient: WebClient        get(){            return WebClient.builder().baseUrl("https://dapi.kakao.com").build()        }    suspend fun blogSearch(): List<BlogSearchResponseDto> =        webClient            .get()            .uri("/v2/search/blog?query=디케이테크인&sort=recency&page=1&size=10")            .headers{                it.add("Authorization", "KakaoAK e1d72f667e7d753a711e17dfa414973e")            }            .accept(MediaType.APPLICATION_JSON)            .retrieve()            .bodyToMono<KakaoBlogSearchResponse>()            .map { it.documents.map { document ->  BlogSearchResponseDto(document.title, document.contents, document.url, document.blogname, document.datetime) }.toList() }            .awaitSingle()}