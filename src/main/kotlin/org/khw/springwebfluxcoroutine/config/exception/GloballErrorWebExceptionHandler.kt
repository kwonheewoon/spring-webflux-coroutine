package org.khw.springwebfluxcoroutine.config.exceptionimport org.springframework.boot.autoconfigure.web.WebPropertiesimport org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandlerimport org.springframework.boot.web.reactive.error.ErrorWebExceptionHandlerimport org.springframework.boot.web.error.ErrorAttributeOptionsimport org.springframework.boot.web.reactive.error.ErrorAttributesimport org.springframework.context.ApplicationContextimport org.springframework.core.annotation.Orderimport org.springframework.http.HttpStatusimport org.springframework.http.MediaTypeimport org.springframework.http.codec.ServerCodecConfigurerimport org.springframework.stereotype.Componentimport org.springframework.web.reactive.function.BodyInsertersimport org.springframework.web.reactive.function.server.*import reactor.core.publisher.Mono@Component@Order(-2)class GlobalExceptionHandler(    globalErrorAttributes: GlobalErrorAttributes?,    applicationContext: ApplicationContext?,    serverCodecConfigurer: ServerCodecConfigurer) : AbstractErrorWebExceptionHandler(    globalErrorAttributes,    WebProperties.Resources(),    applicationContext) {    init {        setMessageWriters(serverCodecConfigurer.writers)        setMessageReaders(serverCodecConfigurer.readers)    }    override fun getRoutingFunction(        errorAttributes: ErrorAttributes?    ): RouterFunction<ServerResponse?> {        return RouterFunctions.route(            RequestPredicates.all()        ) { request: ServerRequest ->            this.renderErrorResponse(                request            )        }    }    private fun renderErrorResponse(        request: ServerRequest    ): Mono<ServerResponse?> {        val errorPropertiesMap = getErrorAttributes(            request,            ErrorAttributeOptions.defaults()        )        return ServerResponse.status(HttpStatus.BAD_REQUEST)            .contentType(MediaType.APPLICATION_JSON)            .body(BodyInserters.fromValue<Map<String, Any>>(errorPropertiesMap))    }}